type Post {
	id: ID!
	title: String
	description: String
	created: Date
	user: User
	likes: [User]
}

type User {
	id: ID!
	displayName: String
	phoneNumber: String!
	avatar: Url
	followers: [User]
	posts: [Post]
	notifications: [Notification]
}

type Notification {
	id: ID!
	type: String!
	actor: User
	user: User
	meta: String!
}

scalar Url
scalar Date
# this is needed for upload to work
scalar Upload

type File {
  id: ID!
  url: String!
  filename: String!
  mimetype: String!
  encoding: String!
}

type Query {
	Post(id: ID!): Post
	Posts(limit: Int, sortField: String, sortOrder: String): [Post]
	User(id: ID!): User
	Users(limit: Int, sortField: String, sortOrder: String): [User]
	uploads: [File]
}

type Mutation {
	createUser(displayName: String): User
	createPost(userId: String! title: String description: String): Post
	followUser(userId: String! subjectId: String!): User
	deletePost(id: ID!): Post
	likePost(id: ID!): Boolean
	login(phoneNumber: String!): Boolean
	verifyCode(phoneNumber: String! verificationCode: String!): String
	singleUpload (file: Upload!): File!
  multipleUpload (files: [Upload!]!): [File!]!
}
