scalar Url
scalar Date
# this is needed for upload to work
scalar Upload

type Tag {
  id: ID!
  title: String
}

input TagInput {
  title: String!
}

type Post {
	id: ID!
	title: String
	description: String
  price: String
	createdAt: String! 
	user: User
	likes: [User]
	file: File
  tags: [Tag]
}

input PostInput {
	title: String
	description: String
	price: String
	fileId: String
  tags: [ID]
}

type Follow {
	subjectId: ID
	userId: ID
}

input UserInput {
 displayName: String
 phoneNumber: String
 avatar: Url
}

type User {
	id: ID!
	displayName: String
	phoneNumber: String
	avatar: Url
  following: [User]
	followers: [User]
  likes: [Post]
	posts: [Post]
	notifications: [Notification]
}

type Notification {
	id: ID!
	actor: User
	user: User
  sourceType: String!
  post: Post
}

type File {
  id: ID!
  url: String
  filename: String
  mimetype: String
  encoding: String
}

type Query {
  Feed(id: ID, limit: Int, offset: Int, sort: [String]): [Post]
	Post(id: ID!): Post
	Posts(limit: Int, offset: Int, sort: [String]): [Post]
	User(id: ID): User
	Users(limit: Int, offset: Int, sort: [String]): [User]
	Files: [File]
  Tags: [Tag]
}

type Mutation {
	updateUser(input: UserInput): User
	createPost(input: PostInput): Post
	followUser(id: ID!): Follow
	deletePost(id: ID!): Post
	likePost(id: ID!): Boolean
	login(phoneNumber: String!): Boolean
	verifyCode(phoneNumber: String! verificationCode: String!): String
	singleUpload (file: Upload!): File!
  multipleUpload (files: [Upload!]!): [File!]!
  createTag(tag: TagInput!): Tag
}
